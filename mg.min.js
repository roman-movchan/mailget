(function () {
    var cookieScript;
    var id;
    var __indexOf = [].indexOf || function (item) {
            /** @type {number} */
            var i = 0;
            var l = this.length;
            for (; i < l; i++) {
                if (i in this && this[i] === item) {
                    return i;
                }
            }
            return -1;
        };
    var methods = {
        /**
         *
         * @param {Object} params
         */
        hideCategory: function () {
            $ = mg.$;
            for (var campaignId in loadedCampaigns['hideCategory']) {
                var loadedCampaign = loadedCampaigns['hideCategory'];
                $(loadedCampaign[campaignId].s).mgHideCategory(loadedCampaign[campaignId].p);
            }
        },
        hideTextSubscribe: function (params) {
            $ = mg.$;
            for (var campaignId in loadedCampaigns['hideTextSubscribe']) {
                var loadedCampaign = loadedCampaigns['hideTextSubscribe'];
                $(loadedCampaign[campaignId].s).mgHideTextSubscribe(loadedCampaign[campaignId].p);
            }
        },
        hideTextLike: function (params) {
            $ = mg.$;
            for (var campaignId in loadedCampaigns['hideTextLike']) {
                var loadedCampaign = loadedCampaigns['hideTextLike'];
                $(loadedCampaign[campaignId].s).mgHideTextLike(loadedCampaign[campaignId].p);
            }
        },
        popupWithSubscribe: function () {
            $ = mg.$;
            for (var campaignId in loadedCampaigns['popupWithSubscribe']) {
                var loadedCampaign = loadedCampaigns['popupWithSubscribe'];
                $(loadedCampaign[campaignId].s).mgPopupWithSubscribe(loadedCampaign[campaignId].p);
            }
        },
        popupWithSocial: function () {
            $ = mg.$;
            for (var campaignId in loadedCampaigns['popupWithSocial']) {
                var loadedCampaign = loadedCampaigns['popupWithSocial'];
                $(loadedCampaign[campaignId].s).mgPopupWithSocial(loadedCampaign[campaignId].p);
            }
        },
        noop: function () {
            mg.log('noop');
        }
    };
    var loadedCampaigns = {};

    /**
     * @param {string} name
     * @return {?}
     */
    this.ns = function (name) {
        var i;
        var ln;
        var current;
        var configList;
        configList = name.split(".");
        /** @type {Window} */
        current = window;
        /** @type {number} */
        i = 0;
        ln = configList.length;
        for (; i < ln;) {
            name = configList[i];
            current[name] = current[name] || {};
            current = current[name];
            i++;
        }
        return current;
    };

    ns("mg");
    this.mg = mg;
    mg.DEBUG = void 0 !== _mgv.debug;
    mg.JQUERY_VERSIONS = "1.10.2 1.10.1 1.10.0 1.9.1 1.9.0 1.8.3 1.8.2 1.8.1 1.8.0 1.7.2 1.7.1 1.7.0".split(" ");
    mg.CDN_URL = "//mailget.net/";
    mg.CAMPAIGN_SERVER = "https://mailget.net/";
    mg.STAT_SERVER = "https://mailget.net/stat.php";
    mg.S_URL = mg.CAMPAIGN_SERVER + "subscribe/subscribe";
    mg.EC_URL = mg.CAMPAIGN_SERVER + "subscribe/emailCheck";
    mg.JS_URL = mg.CDN_URL + "mgjs/";
    mg.isPopupActive = false;
    mg.winWidth = null;
    mg.widgets = [];
    cookieScript = mg.JS_URL + "jquery.cookie.js";
    id = _mgv.id;

    mg.init = function () {
        $ = mg.$;
        mg.winWidth = $(window).width();
        $.ajaxSetup({
            async: true
        });
        mg.getScript(cookieScript, function () {
            mg.getPageCampaign();
        }, null);
    };

    mg.log = function (fmt) {
        if (mg.DEBUG) {
            return console.log(fmt);
        }
    };

    mg.getRandInt = function(min, max) {
        return Math.floor(Math.random() * (max - min + 1)) + min;
    };

    mg.getPageCampaign = function () {
        var $;
        $ = mg.$;
        var campaignIds = [];
        $(document).ready(function () {
            $('[data-mg-c]').each(function () {
                var $this = $(this);
                var campaignId = $this.attr('data-mg-c');
                //mg.log(campaignId);
                campaignIds.push(campaignId);
            });
            if (campaignIds.length > 0) {
                mg.log('Start load campaigns...');
                $.ajax({
                    type: "GET",
                    url: mg.CAMPAIGN_SERVER + "get_campaign.php",
                    dataType: "jsonp",
                    data: {
                        id: id,
                        campaignIds: campaignIds
                    },
                    /**
                     * @param {Object} data
                     * @return {?}
                     */
                    success: function (data) {
                        mg.log("Campaigns loaded from Server");
                        var files = {};
                        for (var id in data) {
                            if (void 0 !== data[id]['cb']) {
                                var callback = data[id]['cb'];
                                var params = data[id]['p'];
                                if (void 0 === loadedCampaigns[callback]) {
                                    loadedCampaigns[callback] = {};
                                }
                                loadedCampaigns[callback][id] = params;
                                var src = mg.CDN_URL + data[id]['src'];
                                if (void 0 === files[src]) {
                                    files[src] = callback;
                                }
                            } else
                                mg.log('Campaign ' + id + '. Error in received data!');
                        }
                        for (var file in files) {
                            mg.getScript(file, methods[files[file]], null);
                        }
                    },
                    /**
                     * @param {XMLHttpRequest} a
                     * @param {?} textStatus
                     * @param {?} jqXHR
                     * @return {?}
                     */
                    error: function (a, textStatus, jqXHR) {
                        return void 0 === a.responseText || "" === a.responseText ?
                            console.log("Campaign load error: ") :
                            console.log($.parseJSON(a.responseText).error);
                    }
                });
            } else {
                mg.log('Not found campaigns to load!');
            }
        });
    };

    /**
     * @param {Object} src
     * @param {Function} callback
     * @param {Object} params
     * @return {?}
     */
    mg.getScript = function (src, callback, params) {
        var done;
        var head;
        var script;
        /** @type {Element} */
        script = document.createElement("script");
        /** @type {Object} */
        script.src = src;
        head = document.getElementsByTagName("head")[0];
        /** @type {boolean} */
        done = false;
        /** @type {function (): ?} */
        script.onload = script.onreadystatechange = function () {
            if (!(done || this.readyState && ("loaded" !== this.readyState && "complete" !== this.readyState))) {
                done = true;
                callback(params);
                script.onload = script.onreadystatechange = null;
            }
        };
        head.appendChild(script);
    };

    /**
     * @return {?}
     */
    mg.load_jQuery = function () {
        var prevTag;
        if (void 0 !== window.jQuery && (prevTag = window.jQuery.fn.jquery, 0 <= __indexOf.call(mg.JQUERY_VERSIONS, prevTag))) {
            mg.log("jQuery " + jQuery.fn.jquery + " is present and meets our requirements.");
            mg.$ = window.jQuery;
            mg.init();
            return;
        }
        mg.log("jQuery is not present.");
        mg.getScript("//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js", function () {
            if ("undefined" !== typeof jQuery) {
                mg.$ = jQuery.noConflict(true);
                mg.log("jQuery version " + mg.$.fn.jquery + " successfully loaded.");
                mg.init();
            } else {
                mg.log("Fail to load jQuery!");
            }
        }, null);
    };

    /**
     * @param {string} value
     * @return {boolean}
     */
    mg.validateEmail = function (value) {
        return /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(value);
    };

    /**
     * @param {string} value
     * @return {boolean}
     */
    mg.validateName = function (value) {
        var $;
        var namePattern = /[^à-ÿÀ-ßa-zA-Z- ]+/i;
        $ = mg.$;
        value = value.replace(namePattern, '');

        return ($.trim(value)) ? true : false;
    };

    mg.sendStatistic = function (action, campaign_id) {
        mg.log('Campaign:' + campaign_id + ' -> ' + action);

        var src = '';
        src += mg.STAT_SERVER + '?';
        src += 'campaign=' + campaign_id;
        src += '&action=' + action;
        src += '&time=' + (new Date()).getTime();
        mg.getScript(src, methods['noop'], null);
        try {
            var category = 'MailGet:Campaign:' + campaign_id;
            var page = '/MailGet:Campaign:' + campaign_id + '/' + action;
            if (void 0 !== window.ga) {
                ga('send', 'event', category, action);
                ga('send', 'pageview', page);
            } else if (void 0 !== window._gaq) {
                _gaq.push(['_trackEvent', category, action]);
                _gaq.push(['_trackPageview', page]);
            }
        }
        catch (e) {
        }

    };

    mg.load_jQuery();
}).call(this);